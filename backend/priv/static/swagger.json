{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "HealthCheck": {
      "description": "Health check response",
      "example": {
        "message": "Tenantee is up and running!"
      },
      "properties": {
        "message": {
          "description": "Should be 'Tenantee is up and running!'",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "Health Check",
      "type": "object"
    },
    "TenantDto": {
      "description": "Tenant DTO used for creating and updating tenants",
      "properties": {
        "email": {
          "description": "Tenant email address",
          "type": "string"
        },
        "first_name": {
          "description": "Tenant first name",
          "type": "string"
        },
        "last_name": {
          "description": "Tenant last name",
          "type": "string"
        },
        "phone": {
          "description": "Tenant phone number",
          "type": "string"
        }
      },
      "required": [
        "last_name",
        "first_name"
      ],
      "title": "Tenant DTO",
      "type": "object"
    },
    "TenantRequest": {
      "description": "Tenant request used for creating and updating tenants",
      "properties": {
        "tenant": {
          "$ref": "#/definitions/TenantDto",
          "description": "Tenant to create or update"
        }
      },
      "required": [
        "tenant"
      ],
      "title": "Tenant Request",
      "type": "object"
    },
    "TenantResponse": {
      "description": "Tenant response",
      "properties": {
        "tenant": {
          "$ref": "#/definitions/TenantResponseObject",
          "description": "Tenant"
        }
      },
      "required": [
        "tenant"
      ],
      "title": "Tenant response",
      "type": "object"
    },
    "TenantResponseList": {
      "description": "Tenant response list",
      "properties": {
        "tenants": {
          "description": "Tenants",
          "items": {
            "$ref": "#/definitions/TenantResponseObject"
          },
          "type": "array"
        }
      },
      "required": [
        "tenants"
      ],
      "title": "Tenant response list",
      "type": "object"
    },
    "TenantResponseObject": {
      "description": "Tenant response object",
      "properties": {
        "description": {
          "description": "Description of tenant",
          "type": "string"
        },
        "email": {
          "description": "Email of tenant",
          "type": "string"
        },
        "id": {
          "description": "ID of tenant",
          "type": "integer"
        },
        "name": {
          "description": "Name of tenant",
          "type": "string"
        },
        "phone": {
          "description": "Phone number of tenant",
          "type": "string"
        }
      },
      "required": [
        "description",
        "name",
        "id"
      ],
      "title": "Tenant response object",
      "type": "object"
    }
  },
  "host": "localhost:4000",
  "info": {
    "description": "API for the Tenantee platform",
    "title": "Tenantee API",
    "version": "0.1.0"
  },
  "paths": {
    "/api/health-check": {
      "get": {
        "description": "Returns a 200 OK if the service is up and running",
        "operationId": "TenanteeWeb.HealthCheckController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HealthCheck"
            }
          }
        },
        "summary": "Health check",
        "tags": [
          "General"
        ]
      }
    },
    "/api/tenants": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tenants found",
            "schema": {
              "$ref": "#/definitions/TenantResponseList"
            }
          }
        },
        "summary": "List all tenants",
        "tags": [
          "Tenant"
        ]
      },
      "post": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.add",
        "parameters": [
          {
            "description": "Tenant to add",
            "in": "body",
            "name": "tenant",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tenant created",
            "schema": {
              "$ref": "#/definitions/TenantResponse"
            }
          },
          "400": {
            "description": "Invalid params"
          }
        },
        "summary": "Add a new tenant",
        "tags": [
          "Tenant"
        ]
      }
    },
    "/api/tenants/{id}": {
      "delete": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.delete_by_id",
        "parameters": [
          {
            "description": "ID of tenant to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant deleted"
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "summary": "Delete a tenant by ID",
        "tags": [
          "Tenant"
        ]
      },
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.find",
        "parameters": [
          {
            "description": "ID of tenant to fetch",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant found",
            "schema": {
              "$ref": "#/definitions/TenantResponse"
            }
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "summary": "Find a tenant by ID",
        "tags": [
          "Tenant"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.update",
        "parameters": [
          {
            "description": "ID of tenant to update",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Tenant to update",
            "in": "body",
            "name": "tenant",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant updated",
            "schema": {
              "$ref": "#/definitions/TenantResponse"
            }
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "summary": "Update a tenant by ID",
        "tags": [
          "Tenant"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "description": "General API information",
      "name": "General"
    },
    {
      "description": "Property management",
      "name": "Properties"
    },
    {
      "description": "Tenant management",
      "name": "Tenants"
    }
  ]
}