{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "HealthCheck": {
      "description": "Health check response",
      "example": {
        "message": "Tenantee is up and running!"
      },
      "properties": {
        "message": {
          "description": "Should be 'Tenantee is up and running!'",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "Health Check",
      "type": "object"
    },
    "Preference": {
      "description": "A preference",
      "properties": {
        "name": {
          "description": "The name of the preference",
          "type": "string"
        },
        "value": {
          "description": "The value of the preference",
          "type": "string"
        }
      },
      "required": [
        "value",
        "name"
      ],
      "title": "Preference",
      "type": "object"
    },
    "PreferenceList": {
      "description": "A list of preferences",
      "properties": {
        "preferences": {
          "description": "The list of preferences",
          "items": {
            "$ref": "#/definitions/Preference"
          },
          "type": "array"
        }
      },
      "title": "Preference list",
      "type": "object"
    },
    "Price": {
      "description": "Price of a property",
      "properties": {
        "amount": {
          "description": "Amount",
          "type": "integer"
        },
        "currency": {
          "description": "Currency",
          "type": "string"
        }
      },
      "required": [
        "currency",
        "amount"
      ],
      "title": "Price",
      "type": "object"
    },
    "Property": {
      "description": "A property",
      "properties": {
        "currency": {
          "description": "Currency of the property price",
          "type": "string"
        },
        "description": {
          "description": "Description of the property",
          "type": "string"
        },
        "due_date_modifier": {
          "description": "Due date modifier (in seconds). The due date of a rent is calculated by adding this value to the rent's start date (1st of the month)",
          "type": "integer"
        },
        "id": {
          "description": "ID of the property",
          "type": "integer"
        },
        "location": {
          "description": "Location of the property",
          "type": "string"
        },
        "name": {
          "description": "Name of the property",
          "type": "string"
        },
        "price": {
          "description": "Price of the property",
          "type": "integer"
        },
        "tenants": {
          "description": "Tenants of the property",
          "items": {
            "$ref": "#/definitions/Tenant"
          },
          "type": "array"
        }
      },
      "required": [
        "tenants",
        "currency",
        "price",
        "location",
        "name",
        "id"
      ],
      "title": "Property",
      "type": "object"
    },
    "PropertyList": {
      "description": "List of properties",
      "properties": {
        "properties": {
          "description": "Properties",
          "items": {
            "$ref": "#/definitions/Property"
          },
          "type": "array"
        }
      },
      "title": "Property list",
      "type": "object"
    },
    "Rent": {
      "description": "Rent",
      "properties": {
        "due_date": {
          "description": "Due Date",
          "type": "string"
        },
        "id": {
          "description": "ID",
          "type": "integer"
        },
        "paid": {
          "description": "Paid",
          "type": "boolean"
        },
        "property": {
          "$ref": "#/definitions/Property",
          "description": "Property (optional)"
        },
        "tenant": {
          "$ref": "#/definitions/Tenant",
          "description": "Tenant (optional)"
        }
      },
      "required": [
        "paid",
        "due_date",
        "id"
      ],
      "title": "Rent",
      "type": "object"
    },
    "RentList": {
      "description": "Rent list",
      "properties": {
        "rents": {
          "$ref": "#/definitions/Rent",
          "description": "Items"
        }
      },
      "title": "Rent list",
      "type": "object"
    },
    "Tenant": {
      "description": "A tenant",
      "properties": {
        "email": {
          "description": "Email of tenant",
          "type": "string"
        },
        "first_name": {
          "description": "Tenant first name",
          "type": "string"
        },
        "id": {
          "description": "ID of tenant",
          "type": "integer"
        },
        "last_name": {
          "description": "Tenant last name",
          "type": "string"
        },
        "name": {
          "description": "Name of tenant (only in response)",
          "type": "string"
        },
        "phone": {
          "description": "Phone of tenant",
          "type": "string"
        }
      },
      "required": [
        "phone",
        "email",
        "last_name",
        "first_name",
        "name",
        "id"
      ],
      "title": "Tenant",
      "type": "object"
    },
    "TenantList": {
      "description": "List of tenants",
      "properties": {
        "tenants": {
          "description": "Tenants",
          "items": {
            "$ref": "#/definitions/Tenant"
          },
          "type": "array"
        }
      },
      "required": [
        "tenants"
      ],
      "title": "Tenant list",
      "type": "object"
    }
  },
  "host": "localhost:4000",
  "info": {
    "description": "API for the Tenantee platform",
    "title": "Tenantee API",
    "version": "0.2.0"
  },
  "paths": {
    "/api/health-check": {
      "get": {
        "description": "Returns a 200 OK if the service is up and running",
        "operationId": "TenanteeWeb.HealthCheckController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HealthCheck"
            }
          }
        },
        "summary": "Health check",
        "tags": [
          "General"
        ]
      }
    },
    "/api/preferences": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.PreferencesController.list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of preferences",
            "schema": {
              "$ref": "#/definitions/PreferenceList"
            }
          }
        },
        "summary": "List all preferences",
        "tags": [
          "Preferences"
        ]
      },
      "put": {
        "description": "",
        "operationId": "TenanteeWeb.PreferencesController.set",
        "parameters": [
          {
            "description": "Preference to set",
            "in": "body",
            "name": "preference",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preference set",
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          },
          "422": {
            "description": "Invalid preference name"
          }
        },
        "summary": "Set preference",
        "tags": [
          "Preferences"
        ]
      }
    },
    "/api/properties": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.PropertyController.list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Properties found",
            "schema": {
              "$ref": "#/definitions/PropertyList"
            }
          }
        },
        "summary": "List all properties",
        "tags": [
          "Property"
        ]
      },
      "post": {
        "description": "",
        "operationId": "TenanteeWeb.PropertyController.add",
        "parameters": [
          {
            "description": "Property to add",
            "in": "body",
            "name": "property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Property added",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          },
          "400": {
            "description": "Invalid params"
          },
          "422": {
            "description": "Invalid property"
          }
        },
        "summary": "Add a new property, without any tenants.",
        "tags": [
          "Property"
        ]
      }
    },
    "/api/properties/{id}": {
      "delete": {
        "description": "",
        "operationId": "TenanteeWeb.PropertyController.delete_by_id",
        "parameters": [
          {
            "description": "ID of property to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Property deleted"
          },
          "404": {
            "description": "Property not found"
          }
        },
        "summary": "Delete a property",
        "tags": [
          "Property"
        ]
      },
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.PropertyController.find",
        "parameters": [
          {
            "description": "ID of property to fetch",
            "in": "path",
            "name": "property",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Property found",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          },
          "404": {
            "description": "Property not found"
          }
        },
        "summary": "Find a property by ID",
        "tags": [
          "Property"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "TenanteeWeb.PropertyController.update",
        "parameters": [
          {
            "description": "ID of property to update",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Property to update",
            "in": "body",
            "name": "property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Property updated",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          },
          "404": {
            "description": "Property not found"
          },
          "422": {
            "description": "Invalid property"
          }
        },
        "summary": "Update a property",
        "tags": [
          "Property"
        ]
      }
    },
    "/api/properties/{id}/rents/unpaid": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.PropertyController.unpaid_rents",
        "parameters": [
          {
            "description": "ID of property to list unpaid rents for",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unpaid rents",
            "schema": {
              "$ref": "#/definitions/RentList"
            }
          },
          "404": {
            "description": "Property not found"
          }
        },
        "summary": "List unpaid rents for a property",
        "tags": [
          "Property"
        ]
      }
    },
    "/api/properties/{id}/tenants/{tenant}": {
      "delete": {
        "description": "",
        "operationId": "TenanteeWeb.PropertyController.remove_tenant",
        "parameters": [
          {
            "description": "ID of property to remove tenant from",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of tenant to remove",
            "in": "path",
            "name": "tenant",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Tenant removed from property",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          },
          "404": {
            "description": "Property or tenant not found"
          }
        },
        "summary": "Remove a tenant from a property",
        "tags": [
          "Property"
        ]
      },
      "put": {
        "description": "",
        "operationId": "TenanteeWeb.PropertyController.add_tenant",
        "parameters": [
          {
            "description": "ID of property to add tenant to",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of tenant to add",
            "in": "path",
            "name": "tenant",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant added to property",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          },
          "404": {
            "description": "Property or tenant not found"
          }
        },
        "summary": "Add a tenant to a property",
        "tags": [
          "Property"
        ]
      }
    },
    "/api/rent": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.RentController.list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of rents",
            "schema": {
              "$ref": "#/definitions/RentList"
            }
          }
        },
        "summary": "List all rents",
        "tags": [
          "Rent"
        ]
      }
    },
    "/api/rent/paid": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.RentController.list_paid",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of paid rents",
            "schema": {
              "$ref": "#/definitions/RentList"
            }
          }
        },
        "summary": "List all paid rents",
        "tags": [
          "Rent"
        ]
      }
    },
    "/api/rent/unpaid": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.RentController.list_unpaid",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of unpaid rents",
            "schema": {
              "$ref": "#/definitions/RentList"
            }
          }
        },
        "summary": "List all unpaid rents",
        "tags": [
          "Rent"
        ]
      }
    },
    "/api/rent/{id}/mark-as-paid": {
      "post": {
        "description": "",
        "operationId": "TenanteeWeb.RentController.mark_as_paid",
        "parameters": [
          {
            "description": "Rent ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Rent marked as paid",
            "schema": {
              "$ref": "#/definitions/Rent"
            }
          },
          "404": {
            "description": "Rent not found"
          }
        },
        "summary": "Mark rent as paid",
        "tags": [
          "Rent"
        ]
      }
    },
    "/api/rent/{id}/mark-as-unpaid": {
      "post": {
        "description": "",
        "operationId": "TenanteeWeb.RentController.mark_as_unpaid",
        "parameters": [
          {
            "description": "Rent ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Rent marked as unpaid",
            "schema": {
              "$ref": "#/definitions/Rent"
            }
          },
          "404": {
            "description": "Rent not found"
          }
        },
        "summary": "Mark rent as unpaid",
        "tags": [
          "Rent"
        ]
      }
    },
    "/api/tenants": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tenants found",
            "schema": {
              "$ref": "#/definitions/TenantList"
            }
          }
        },
        "summary": "List all tenants",
        "tags": [
          "Tenant"
        ]
      },
      "post": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.add",
        "parameters": [
          {
            "description": "Tenant to add",
            "in": "body",
            "name": "tenant",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tenant created",
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          },
          "400": {
            "description": "Invalid params"
          },
          "422": {
            "description": "Invalid tenant"
          }
        },
        "summary": "Add a new tenant",
        "tags": [
          "Tenant"
        ]
      }
    },
    "/api/tenants/{id}": {
      "delete": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.delete_by_id",
        "parameters": [
          {
            "description": "ID of tenant to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Tenant deleted"
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "summary": "Delete a tenant by ID",
        "tags": [
          "Tenant"
        ]
      },
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.find",
        "parameters": [
          {
            "description": "ID of tenant to fetch",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant found",
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "summary": "Find a tenant by ID",
        "tags": [
          "Tenant"
        ]
      },
      "patch": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.update",
        "parameters": [
          {
            "description": "ID of tenant to update",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Tenant to update",
            "in": "body",
            "name": "tenant",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant updated",
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          },
          "404": {
            "description": "Tenant not found"
          },
          "422": {
            "description": "Invalid tenant"
          }
        },
        "summary": "Update a tenant by ID",
        "tags": [
          "Tenant"
        ]
      }
    },
    "/api/tenants/{id}/rents": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.all_rents",
        "parameters": [
          {
            "description": "ID of tenant to fetch rents for",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Rents found",
            "schema": {
              "$ref": "#/definitions/RentList"
            }
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "summary": "List all rents for a tenant",
        "tags": [
          "Tenant"
        ]
      }
    },
    "/api/tenants/{id}/rents/unpaid": {
      "get": {
        "description": "",
        "operationId": "TenanteeWeb.TenantController.unpaid_rents",
        "parameters": [
          {
            "description": "ID of tenant to list unpaid rents for",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unpaid rents",
            "schema": {
              "$ref": "#/definitions/RentList"
            }
          },
          "404": {
            "description": "Tenant not found"
          }
        },
        "summary": "List unpaid rents for tenants",
        "tags": [
          "Tenant"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "description": "General API information",
      "name": "General"
    },
    {
      "description": "Property management",
      "name": "Property"
    },
    {
      "description": "Tenant management",
      "name": "Tenant"
    },
    {
      "description": "Rent management",
      "name": "Rent"
    },
    {
      "description": "Preferences management",
      "name": "Preferences"
    }
  ]
}